/*! Timer in arch layer; use 'arch_timer_t' device defined in configuration */
#pragma once

#include <types/time.h>

/*! interface for kernel  */

/*! Initialize timer 'arch' subsystem: timer device, subsystem data */
void arch_timer_init(void *kernel_timer_handler);


/*!
 * Get remaining time in timer
 * \param time Store address
 */
void arch_timer_remainder(timespec_t *time);

/*!
 * Set 'current' system time
 * \param time Time to set as current
 * NOTE: changing clock may have unpredicted behavior on timers!
 */
void arch_set_time(timespec_t *time);

/*! Get minimal timer interval supported by hardware timer */
void arch_get_min_interval(timespec_t *time);
void arch_get_max_interval(timespec_t *time);

/*! Enable/disable interrupt generated by hardware timer */
void arch_enable_timer_interrupt();
void arch_disable_timer_interrupt();
void arch_timer_set(timespec_t period);

#ifdef _K_TIME_C_
/*!
 * Set next timer activation
 * \param period Time of next activation
 */
void arch_set_hz(unsigned hz);
#endif